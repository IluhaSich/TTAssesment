package com.project.tta.services.interfaces;

public interface EvaluationInterface {
    /**
     * Оценивает расписание по критериям<br><br>
     *
     * @param table массив с расписанием
     * @return Итоговая оценка по всем критериям
     */
    int evaluateTimeTable(String[][] table);
    /**
     * Оценивает расписание по наличию окон<br><br>
     * Каждое окно (перерыв между парами, когда занятий нет) — −2 балла<br>
     * Два и более окна в одном дне — −5 баллов дополнительно<br>
     * Полностью заполненный день без окон — +3 балла<br>
     *
     * @param table массив с расписанием
     * @return Итоговая оценка по критерию
     */
    int evaluateGaps(String[][] table);
    /**
     * Оценивает расписание по количеству учебных дней в неделю<br><br>
     * 4 дня (оптимально) — +5 баллов<br>
     * 5 дней (стандартно) — +2 балла<br>
     * 6 дней (перегруз) — −3 балла<br>
     *
     * @param table массив с расписанием
     * @return Итоговая оценка по критерию
     */
    int evaluateStudyDays(String[][] table);
    /**
     * Оценивает расписание по равномерности разброса нагрузки вычисляя коэффициент ковариации CV<br><br>
     * CV < 0.1 → расписание равномерное → +5 баллов<br>
     * 0.1 ≤ CV < 0.2 → небольшие отклонения → +2 балла<br>
     * 0.2 ≤ CV < 0.4 → допустимые колебания → 0 баллов<br>
     * 0.4 ≤ CV < 0.6 → сильные скачки нагрузки → -3 балла<br>
     * CV ≥ 0.6 → резкий дисбаланс → -5 баллов<br>
     *
     * @param table массив с расписанием
     * @return Итоговая оценка по критерию
     */

    int evaluateLoadBalance(String[][] table);
    /**
     * Оценивает расписание по распределению пар в неделе (нагрузка по дням)<br><br>
     * Если нагрузка равномерно распределена (примерно одинаковое число пар в каждый учебный день) — +3 балла<br>
     * Если один день перегружен (6+ пар) — −3 балла<br>
     * Если есть дни с 1-2 парами, а другие перегружены — −2 бал<br>
     *
     * @param table массив с расписанием
     * @return Итоговая оценка по критерию
     */
    int evaluateDailyLoad(String[][] table);
    /** Оценивает расписание по времени начала занятий <br><br>
     * Если пары начинаются с первой (8:00) три и более раза в неделю — −2 балла<br>
     * Если пары в основном начинаются со второй-третьей (9:30-11:00) — +3 балла<br>
     * Если хотя бы один день начинается с четвёртой (12:30) или позже — +2 балла<br>
     *
     * @param table массив с расписанием
     * @return Итоговая оценка по критерию
     */
    int evaluateLessonStartTime(String[][] table);
    /** Оценивает расписание по времени окончания занятий <br><br>
     * Если пары заканчиваются позже 18:00 более 3 раз в неделю — −3 балла <br>
     * Если пары в основном заканчиваются до 16:00 — +3 балла <br>
     *
     * @param table массив с расписанием
     * @return Итоговая оценка по критерию
     */
    int evaluateLessonEndTime(String[][] table);
    /** Оценивает расписание по распределению выходных <br><br>
     * Если выходные идут подряд (например, суббота и воскресенье) — +3 балла<br>
     * Если выходные разбросаны (например, среда и воскресенье) — −2 балла<br>
     *
     * @param table массив с расписанием
     * @return Итоговая оценка по критерию
     */
    int evaluateWeekendDistribution(String[][] table);
    // Есть большой перерыв между парами
    /** Оценивает расписание по наличию большого перерыва между парами <br><br>
     * Если между парами есть большой перерыв — −2 балла<br>
     * Если все пары подряд — +2 балла<br>
     *
     * @param table массив с расписанием
     * @return Итоговая оценка по критерию
     */
    int evaluateForHavingLongBreak(String[][] table);
}
